<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="f57a1d15-9d79-485b-9d6a-7695fa35f240" name="Changes" comment="generated spring api">
      <change afterPath="$PROJECT_DIR$/../flask/.dockerignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../flask/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../flask/.idea/flask.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../flask/.idea/misc.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../flask/.idea/modules.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../flask/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../flask/.openapi-generator-ignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../flask/.openapi-generator/FILES" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../flask/.openapi-generator/VERSION" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../flask/.travis.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../flask/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../flask/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../flask/docker-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../flask/git_push.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../flask/openapi_server/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../flask/openapi_server/__main__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../flask/openapi_server/controllers/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../flask/openapi_server/controllers/default_controller.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../flask/openapi_server/controllers/security_controller.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../flask/openapi_server/encoder.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../flask/openapi_server/models/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../flask/openapi_server/models/base_model.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../flask/openapi_server/openapi/openapi.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../flask/openapi_server/test/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../flask/openapi_server/test/test_default_controller.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../flask/openapi_server/typing_utils.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../flask/openapi_server/util.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../flask/requirements.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../flask/setup.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../flask/test-requirements.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../flask/tox.ini" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../gin/.idea/gin.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../gin/docker-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../openapi.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../openapitools.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/jarRepositories.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/uiDesigner.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.openapi-generator-ignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.openapi-generator/FILES" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.openapi-generator/VERSION" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/openapitools/OpenApiGeneratorApplication.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/openapitools/RFC3339DateFormat.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/openapitools/api/ApiUtil.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/openapitools/api/HelloApi.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/openapitools/api/HelloApiController.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/openapitools/configuration/HomeController.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/openapitools/configuration/SpringDocConfiguration.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/resources/application.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/resources/openapi.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/test/java/org/openapitools/OpenApiGeneratorApplicationTests.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/../.." />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;kristopalka&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/kristopalka/api-performance-testing&quot;,
    &quot;accountId&quot;: &quot;d8cfb1f6-2f2f-4bad-8d13-f32024e6f4c1&quot;
  }
}</component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2fV80hqjpiEVnml2vZptW8Ojt5w" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Docker.docker-compose.yml.spring: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml: Compose Deployment.executor": "Run",
    "RequestMappingsPanelOrder0": "0",
    "RequestMappingsPanelOrder1": "1",
    "RequestMappingsPanelWidth0": "75",
    "RequestMappingsPanelWidth1": "75",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "Spring Boot.OpenApiGeneratorApplication.executor": "Run",
    "git-widget-placeholder": "main",
    "go.import.settings.migrated": "true",
    "ignore.virus.scanning.warn.message": "true",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "D:/Projekty/api-performance-testing/generate/spring",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager" selected="Docker.docker-compose.yml.spring: Compose Deployment">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="spring2" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="spring2" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="JetRunConfigurationType">
      <module name="spring2" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="KotlinStandaloneScriptRunConfigurationType">
      <module name="spring2" />
      <option name="filePath" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="OpenApiGeneratorApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="openapi-spring" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="org.openapitools.OpenApiGeneratorApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="commandLineOptions" value="--build" />
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.spring: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="spring" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.docker-compose.yml.spring: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
      <item itemvalue="Spring Boot.OpenApiGeneratorApplication" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.yml.spring: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9f38398b9061-18abd8497189-intellij.indexing.shared.core-IU-241.14494.240" />
        <option value="bundled-js-predefined-1d06a55b98c1-74d2a5396914-JavaScript-IU-241.14494.240" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="f57a1d15-9d79-485b-9d6a-7695fa35f240" name="Changes" comment="" />
      <created>1713874663943</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1713874663943</updated>
      <workItem from="1713874665128" duration="70000" />
      <workItem from="1713876312672" duration="367000" />
      <workItem from="1713877067290" duration="4663000" />
      <workItem from="1713967052797" duration="316000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="generated spring api" />
    <option name="LAST_COMMIT_MESSAGE" value="generated spring api" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>